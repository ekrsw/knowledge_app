{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(alembic init:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(venvScripts:*)",
      "Bash(pip install:*)",
      "Bash(powershell:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(ls:*)",
      "Bash(pip uninstall:*)",
      "Bash(touch:*)",
      "Bash(timeout:*)",
      "Bash(pip show:*)",
      "Bash(rm:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm ci:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(git commit:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(alembic upgrade:*)",
      "Bash(.\\venv\\Scripts\\activate)",
      "Bash(venv\\Scripts\\python.exe -m pip install:*)",
      "Bash(psql:*)",
      "Bash(sc query:*)",
      "Bash(set PGPASSWORD=password)",
      "Bash(uvicorn:*)",
      "Bash(.\\venv\\Scripts\\pip.exe install email-validator)",
      "Bash(.venvScriptsactivate)",
      "Bash(.venvScriptsalembic.exe revision --autogenerate -m \"Change article publish_start and publish_end from DateTime to Date\")",
      "Bash(uv run:*)",
      "Bash(set DATABASE_URL=postgresql://postgres:password@localhost:5432/knowledge_revision_system)",
      "Bash(del check_alembic.py)",
      "Bash(DATABASE_URL=postgresql://postgres:password@localhost:5432/knowledge_revision uv run alembic revision --autogenerate -m \"Make approver_id required in revisions table\")",
      "Bash(DATABASE_URL=postgresql://postgres:password@localhost:5432/knowledge_revision uv run alembic upgrade head)",
      "Bash(mv:*)",
      "Bash(set DATABASE_URL=sqlite+aiosqlite:///:memory:)",
      "Bash(set ENVIRONMENT=test)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/performance/test_performance.py -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/performance/test_performance.py::TestPerformanceAPI::test_large_data_response_time -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/performance/test_performance.py::TestPerformanceAPI::test_concurrent_users_simulation -v -s)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/integration/ -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/integration/test_approval_groups_api.py -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/integration/test_info_categories_api.py -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/integration/test_approval_group_api.py -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest backend/tests/integration/ -v --tb=no -q)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run --dev pytest tests/performance/test_performance.py::TestPerformanceMemory::test_memory_usage_large_dataset -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run --dev pytest tests/performance/test_performance.py::TestPerformanceMemory::test_memory_usage_large_dataset -v -s)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest tests/performance/test_performance.py::TestPerformanceMemory::test_memory_usage_large_dataset -v)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest tests/ -q --tb=no)",
      "Bash(DATABASE_URL=sqlite+aiosqlite:///:memory: ENVIRONMENT=test uv run pytest tests/performance/ -q --tb=no)",
      "Bash(npm run lint)",
      "Bash(npm run format:check:*)",
      "Bash(npm run format:*)",
      "Bash(taskkill:*)",
      "Bash(PORT=3000 npm run dev)"
    ],
    "deny": []
  }
}