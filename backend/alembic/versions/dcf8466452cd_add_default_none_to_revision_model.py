"""add default=None to Revision Model

Revision ID: dcf8466452cd
Revises: 5c5e57c2a070
Create Date: 2025-08-04 07:42:51.140316

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dcf8466452cd'
down_revision = '5c5e57c2a070'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before dropping indexes and table
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    if 'article_audit_logs' in inspector.get_table_names():
        # Drop indexes if they exist
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('article_audit_logs')]
        
        if 'ix_article_audit_logs_article_id' in existing_indexes:
            op.drop_index('ix_article_audit_logs_article_id', table_name='article_audit_logs')
        
        if 'ix_article_audit_logs_created_at' in existing_indexes:
            op.drop_index('ix_article_audit_logs_created_at', table_name='article_audit_logs')
        
        # Drop table
        op.drop_table('article_audit_logs')
    op.alter_column('revisions', 'after_publish_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('revisions', 'after_publish_end',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('revisions', 'after_publish_end',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('revisions', 'after_publish_start',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.create_table('article_audit_logs',
    sa.Column('log_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('article_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('operation', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('admin_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('changes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('log_id', name='article_audit_logs_pkey')
    )
    op.create_index('ix_article_audit_logs_created_at', 'article_audit_logs', ['created_at'], unique=False)
    op.create_index('ix_article_audit_logs_article_id', 'article_audit_logs', ['article_id'], unique=False)
    # ### end Alembic commands ###